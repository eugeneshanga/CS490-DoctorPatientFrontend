{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eshan\\\\Documents\\\\VsCode stuff\\\\cs490\\\\CS490-DoctorPatientFrontend\\\\doctor-patient-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [message, setMessage] = useState('Loading...');\n  useEffect(() => {\n    // Call the Flask API\n    fetch('http://localhost:5000/api/hello').then(response => response.json()).then(data => setMessage(data.message)).catch(error => {\n      console.error('Error fetching data:', error);\n      setMessage('Error loading message');\n    });\n  }, []);\n  useEffect(() => {\n    fetch('http://127.0.0.1:5000/api/doctors').then(response => response.json()).then(data => {\n      console.log(data);\n    }).catch(error => {\n      console.error('Error fetching doctors:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginTop: '50px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/Qu0Vg4+MUaCLYWkvhOLRhYl/78=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","message","setMessage","fetch","then","response","json","data","catch","error","console","log","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/eshan/Documents/VsCode stuff/cs490/CS490-DoctorPatientFrontend/doctor-patient-frontend/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useEffect, useState } from 'react';\n\nfunction App() {\n  const [message, setMessage] = useState('Loading...');\n  \n  useEffect(() => {\n    // Call the Flask API\n    fetch('http://localhost:5000/api/hello')\n      .then(response => response.json())\n      .then(data => setMessage(data.message))\n      .catch(error => {\n        console.error('Error fetching data:', error);\n        setMessage('Error loading message');\n      });\n  }, []);\n\n  useEffect(() => {\n    fetch('http://127.0.0.1:5000/api/doctors')\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n\n      })\n      .catch(error => {\n        console.error('Error fetching doctors:', error);\n      });\n  }, []);\n\n  return (\n    <div style={{ textAlign: 'center', marginTop: '50px' }}>\n      <h1>{message}</h1>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,YAAY,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACd;IACAQ,KAAK,CAAC,iCAAiC,CAAC,CACrCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,UAAU,CAACK,IAAI,CAACN,OAAO,CAAC,CAAC,CACtCO,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CP,UAAU,CAAC,uBAAuB,CAAC;IACrC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAENP,SAAS,CAAC,MAAM;IACdQ,KAAK,CAAC,mCAAmC,CAAC,CACvCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZG,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;IAEnB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAKc,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,eACrDjB,OAAA;MAAAiB,QAAA,EAAKd;IAAO;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEV;AAACnB,EAAA,CA/BQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAiCZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}